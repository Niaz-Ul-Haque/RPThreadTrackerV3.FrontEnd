// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering snapshots should render valid snapshot 1`] = `
<div>
  <FormGroup
    row={true}
    tag="div"
  >
    <Col
      lg="3"
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <Label
        htmlFor="username"
        tag="label"
      >
        Username:
      </Label>
    </Col>
    <Col
      lg="9"
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <AvField
        data-spec="username-field"
        name="username"
        onChange={[MockFunction]}
        placeholder="Username"
        type="text"
        validate={
          Object {
            "maxLength": Object {
              "errorMessage": "Your username is too long.",
              "value": 256,
            },
            "minLength": Object {
              "errorMessage": "Your username must be more than 3 characters.",
              "value": 3,
            },
            "required": Object {
              "errorMessage": "You must enter a username.",
              "value": true,
            },
          }
        }
        value="TestUser"
      />
    </Col>
  </FormGroup>
  <FormGroup
    row={true}
    tag="div"
  >
    <Col
      lg="3"
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <Label
        htmlFor="email"
        tag="label"
      >
        Email:
      </Label>
    </Col>
    <Col
      lg="9"
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <AvField
        data-spec="email-field"
        disabled={true}
        name="email"
        onChange={[MockFunction]}
        placeholder="Email"
        type="email"
        validate={
          Object {
            "email": Object {
              "errorMessage": "Please enter a valid email",
              "value": true,
            },
            "required": Object {
              "errorMessage": "You must enter an email.",
              "value": true,
            },
          }
        }
        value="test@test.com"
      />
    </Col>
  </FormGroup>
</div>
`;
