// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering should render valid snapshot when loading 1`] = `
<LoadingIndicator
  data-spec="layout-loader"
  style={
    Object {
      "height": 50,
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
      "width": 50,
    }
  }
/>
`;

exports[`rendering should render valid snapshot with loading indicator 1`] = `
<div
  className="app"
  data-spec="layout-app"
>
  <Connect(ReduxToastr) />
  <HeaderContainer />
  <div
    className="app-body"
  >
    <Sidebar
      fetchNews={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
        }
      }
      fetchUser={[MockFunction]}
      fetchUserSettings={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
        }
      }
      news={Array []}
      user={
        Object {
          "id": "12345",
        }
      }
      userSettings={Object {}}
    />
    <main
      className="main"
    >
      <Breadcrumb />
      <Container
        fluid={true}
        tag="div"
      >
        <Switch>
          <Route
            component={[Function]}
            name="Dashboard"
            path="/dashboard"
          />
          <Route
            component={[Function]}
            name="Threads"
            path="threads/*"
          />
          <Route
            name="Threads"
            path="/threads/your-turn"
            render={[Function]}
          />
          <Route
            name="Threads"
            path="/threads/their-turn"
            render={[Function]}
          />
          <Route
            name="Threads"
            path="/threads/archived"
            render={[Function]}
          />
          <Route
            name="Threads"
            path="/threads/queued"
            render={[Function]}
          />
          <Route
            component={[Function]}
            name="Tools"
            path="/tools"
          />
          <Route
            component={[Function]}
            name="Settings"
            path="/settings"
          />
          <Route
            component={[Function]}
            name="Characters"
            path="/manage-characters"
          />
          <Route
            component={[Function]}
            name="Help"
            path="/help"
          />
          <Redirect
            from="/"
            push={false}
            to="/dashboard"
          />
        </Switch>
      </Container>
    </main>
    <AsideContainer />
  </div>
  <Footer />
  <ModalContainer />
</div>
`;
